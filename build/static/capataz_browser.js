//! capataz 0.1.7-beta

require(["creatartis-base"],function(base){"use strict";window.base=base;var APP=window.APP={},STATS=APP.stats={received:0,finished:0,failed:0,reported:0},CONFIG;APP.Drudger=base.declare({"static __count__":0,constructor:function e(){this.__number__=e.__count__++},initialize:function(e){e|=0;var r=new base.Future;return 0<=e&&"undefined"!=typeof Worker?(this.webworker=new Worker("capataz_worker.js"),this.webworker.onmessage=function(e){r.resolve(e.data||!0)}):0<e?r.reject("Webworkers are required but are not supported in this browser!"):r.resolve(!1),r},onWorkerMessage:function(e,r){var t=JSON.parse(r.data);t.hasOwnProperty("error")?e.reject(t.error):t.hasOwnProperty("result")&&e.resolve(t.result)},getTask:function(){var r=this;return base.Future.retrying(function(){return console.info(r.__number__+" < Requesting jobs."),base.HttpRequest.getJSON(CONFIG.jobURI).then(function(e){return e.serverStartTime>CONFIG.startTime&&(console.info(r.__number__+" > Definitions are outdated. Reloading..."),window.location.reload()),console.info(r.__number__+" > Received "+e.jobs.length+" jobs. E.g.: "+e.jobs[0].info),STATS.received++,APP.updateJobReport(),e},function(e){throw console.warn(r.__number__+" ! Job request failed (status: ",e.status," ",e.statusText,' "',e.responseText,'")!'),new Error("Job request failed!")})},CONFIG.maxRetries,CONFIG.minDelay,2,CONFIG.maxDelay).fail(function(){console.error(r.__number__+" ! Job request failed too many times! Not retrying anymore.")})},doWork:function(e){var t=this;return base.Future.sequence(e.jobs,function(r){return r.clientPlatform=navigator.platform,r.startedAt=Date.now(),t.doJob(r).then(function(e){return STATS.finished++,APP.updateJobReport(),r.result=e,r.time=Date.now()-r.startedAt,CONFIG.logDebug&&console.debug(t.__number__+" > ",r.info," -> ",e),r},function(e){return r.error=e,r.time=Date.now()-r.startedAt,console.warn(t.__number__+" > ",r.info," !! ",e),STATS.failed++,APP.updateJobReport(),r})}).then(function(){return e})},doJob:function doJob(job){var drudger=this;if(this.webworker){var future=new base.Future;return this.webworker.onmessage=this.onWorkerMessage.bind(this,future),this.webworker.postMessage(JSON.stringify(job)),future}return base.Future.invoke(eval,this,job.code)},postResults:function(e){var r=this;return base.Future.retrying(function(){return console.info(r.__number__+" < Posting results."),base.HttpRequest.postJSON(CONFIG.jobURI,e).done(function(){STATS.reported++,APP.updateJobReport()}).fail(function(e){console.warn(r.__number__+" ! Posting failed: ",e.status," ",e.statusText," ",e.responseText,".")})},CONFIG.maxRetries,CONFIG.minDelay,2,CONFIG.maxDelay).fail(function(){console.error(r.__number__+" ! Job result post failed too many times! Not retrying anymore.")})},drudge:function(){var r=this;return base.Future.doWhile(function(){return r.getTask().then(r.doWork.bind(r)).then(r.postResults.bind(r))},function(){return!0}).fail(function(e){console.error(r.__number__+" Uncaught error on drudger! "+e)})}}),APP.start=function(){var t={};return window.location.search.substring(1).split("&").forEach(function(e){2==(e=e.split("=").map(decodeURIComponent)).length&&(t[e[0]]=e[1])}),!t.hasOwnProperty("adjustWorkerCount")&&t.hasOwnProperty("workerCount")&&(t.adjustWorkerCount=!1),base.HttpRequest.getJSON(t.configURI||"config.json").then(function(e){(CONFIG=APP.CONFIG=Object.assign({jobURI:"task.json",workerCount:2,adjustWorkerCount:!0,maxRetries:50,minDelay:100,maxDelay:12e4,logLength:30,logDebug:!1},e,t)).startTime=Date.now();var r=CONFIG.adjustWorkerCount&&navigator.hardwareConcurrency?navigator.hardwareConcurrency:CONFIG.workerCount;return console.info("Starting "+r+" workers."),APP.drudgers=base.Iterable.range(r).map(function(){return new APP.Drudger}).toArray(),base.Future.sequence(APP.drudgers,function(e){return e.initialize(CONFIG.useWebworkers).done(e.drudge.bind(e))})})},APP.updateJobReport=function(){var e=document.getElementById("job-report"),r=this.stats;e.innerHTML="Tasks: "+r.received+" received, "+r.reported+" reported.<br/>Jobs: "+r.finished+" finished, "+r.failed+" failed."},"complete"===document.readyState?APP.start():window.addEventListener("load",APP.start,!1)});